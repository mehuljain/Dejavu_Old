<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-05-12 15:16:43.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */
namespace Tracestay\Bundle\TracestayBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity\CurrencyCode
 *
 * @ORM\Entity(repositoryClass="CurrencyCodeRepository")
 * @ORM\Table(name="currencyCode")
 */
class CurrencyCode
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Column(type="float", nullable=true)
     */
    protected $nTotal;

    /**
     * @ORM\Column(type="float", nullable=true)
     */
    protected $nTax;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tCurrency;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nCountry;

    /**
     * @ORM\OneToMany(targetEntity="Plan", mappedBy="currencyCode")
     * @ORM\JoinColumn(name="id", referencedColumnName="currencyCodeId")
     */
    protected $plans;

    /**
     * @ORM\OneToMany(targetEntity="PlanHistory", mappedBy="currencyCode")
     * @ORM\JoinColumn(name="id", referencedColumnName="currencyCodeId")
     */
    protected $planHistories;

    public function __construct()
    {
        $this->plans = new ArrayCollection();
        $this->planHistories = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Entity\CurrencyCode
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nTotal.
     *
     * @param float $nTotal
     * @return \Entity\CurrencyCode
     */
    public function setNTotal($nTotal)
    {
        $this->nTotal = $nTotal;

        return $this;
    }

    /**
     * Get the value of nTotal.
     *
     * @return float
     */
    public function getNTotal()
    {
        return $this->nTotal;
    }

    /**
     * Set the value of nTax.
     *
     * @param float $nTax
     * @return \Entity\CurrencyCode
     */
    public function setNTax($nTax)
    {
        $this->nTax = $nTax;

        return $this;
    }

    /**
     * Get the value of nTax.
     *
     * @return float
     */
    public function getNTax()
    {
        return $this->nTax;
    }

    /**
     * Set the value of tCurrency.
     *
     * @param string $tCurrency
     * @return \Entity\CurrencyCode
     */
    public function setTCurrency($tCurrency)
    {
        $this->tCurrency = $tCurrency;

        return $this;
    }

    /**
     * Get the value of tCurrency.
     *
     * @return string
     */
    public function getTCurrency()
    {
        return $this->tCurrency;
    }

    /**
     * Set the value of nCountry.
     *
     * @param integer $nCountry
     * @return \Entity\CurrencyCode
     */
    public function setNCountry($nCountry)
    {
        $this->nCountry = $nCountry;

        return $this;
    }

    /**
     * Get the value of nCountry.
     *
     * @return integer
     */
    public function getNCountry()
    {
        return $this->nCountry;
    }

    /**
     * Add Plan entity to collection (one to many).
     *
     * @param \Entity\Plan $plan
     * @return \Entity\CurrencyCode
     */
    public function addPlan(Plan $plan)
    {
        $this->plans[] = $plan;

        return $this;
    }

    /**
     * Remove Plan entity from collection (one to many).
     *
     * @param \Entity\Plan $plan
     * @return \Entity\CurrencyCode
     */
    public function removePlan(Plan $plan)
    {
        $this->plans->removeElement($plan);

        return $this;
    }

    /**
     * Get Plan entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPlans()
    {
        return $this->plans;
    }

    /**
     * Add PlanHistory entity to collection (one to many).
     *
     * @param \Entity\PlanHistory $planHistory
     * @return \Entity\CurrencyCode
     */
    public function addPlanHistory(PlanHistory $planHistory)
    {
        $this->planHistories[] = $planHistory;

        return $this;
    }

    /**
     * Remove PlanHistory entity from collection (one to many).
     *
     * @param \Entity\PlanHistory $planHistory
     * @return \Entity\CurrencyCode
     */
    public function removePlanHistory(PlanHistory $planHistory)
    {
        $this->planHistories->removeElement($planHistory);

        return $this;
    }

    /**
     * Get PlanHistory entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPlanHistories()
    {
        return $this->planHistories;
    }

    public function __sleep()
    {
        return array('id', 'nTotal', 'nTax', 'tCurrency', 'nCountry');
    }
}
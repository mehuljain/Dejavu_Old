<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-05-12 15:16:43.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Entity\AuthenticationType
 *
 * @ORM\Entity(repositoryClass="AuthenticationTypeRepository")
 * @ORM\Table(name="authenticationType")
 */
class AuthenticationType
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nNegotiate;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nBasic;

    /**
     * @ORM\OneToMany(targetEntity="Authentication", mappedBy="authenticationType")
     * @ORM\JoinColumn(name="id", referencedColumnName="authenticationTypeId")
     */
    protected $authentications;

    public function __construct()
    {
        $this->authentications = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Entity\AuthenticationType
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nNegotiate.
     *
     * @param integer $nNegotiate
     * @return \Entity\AuthenticationType
     */
    public function setNNegotiate($nNegotiate)
    {
        $this->nNegotiate = $nNegotiate;

        return $this;
    }

    /**
     * Get the value of nNegotiate.
     *
     * @return integer
     */
    public function getNNegotiate()
    {
        return $this->nNegotiate;
    }

    /**
     * Set the value of nBasic.
     *
     * @param integer $nBasic
     * @return \Entity\AuthenticationType
     */
    public function setNBasic($nBasic)
    {
        $this->nBasic = $nBasic;

        return $this;
    }

    /**
     * Get the value of nBasic.
     *
     * @return integer
     */
    public function getNBasic()
    {
        return $this->nBasic;
    }

    /**
     * Add Authentication entity to collection (one to many).
     *
     * @param \Entity\Authentication $authentication
     * @return \Entity\AuthenticationType
     */
    public function addAuthentication(Authentication $authentication)
    {
        $this->authentications[] = $authentication;

        return $this;
    }

    /**
     * Remove Authentication entity from collection (one to many).
     *
     * @param \Entity\Authentication $authentication
     * @return \Entity\AuthenticationType
     */
    public function removeAuthentication(Authentication $authentication)
    {
        $this->authentications->removeElement($authentication);

        return $this;
    }

    /**
     * Get Authentication entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAuthentications()
    {
        return $this->authentications;
    }

    public function __sleep()
    {
        return array('id', 'nNegotiate', 'nBasic');
    }
}
<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-05-12 15:16:43.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Entity\PlanHistory
 *
 * @ORM\Entity(repositoryClass="PlanHistoryRepository")
 * @ORM\Table(name="planHistory", indexes={@ORM\Index(name="fk_planHistory_university_idx", columns={"universityId"}), @ORM\Index(name="fk_planHistory_currencyCode1_idx", columns={"currencyCodeId"})})
 */
class PlanHistory
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $universityId;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $currencyCodeId;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nListingName;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nAdminAccounts;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bEmailSupport;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bPhoneSupport;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bMailouts;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bSSLsetup;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nCountry;

    /**
     * @ORM\Column(type="text", nullable=true)
     */
    protected $tAdditionalNotes;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $dCreatedAt;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $dUpdatedAt;

    /**
     * @ORM\ManyToOne(targetEntity="University", inversedBy="planHistories")
     * @ORM\JoinColumn(name="universityId", referencedColumnName="id")
     */
    protected $university;

    /**
     * @ORM\ManyToOne(targetEntity="CurrencyCode", inversedBy="planHistories")
     * @ORM\JoinColumn(name="currencyCodeId", referencedColumnName="id")
     */
    protected $currencyCode;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Entity\PlanHistory
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of universityId.
     *
     * @param integer $universityId
     * @return \Entity\PlanHistory
     */
    public function setUniversityId($universityId)
    {
        $this->universityId = $universityId;

        return $this;
    }

    /**
     * Get the value of universityId.
     *
     * @return integer
     */
    public function getUniversityId()
    {
        return $this->universityId;
    }

    /**
     * Set the value of currencyCodeId.
     *
     * @param integer $currencyCodeId
     * @return \Entity\PlanHistory
     */
    public function setCurrencyCodeId($currencyCodeId)
    {
        $this->currencyCodeId = $currencyCodeId;

        return $this;
    }

    /**
     * Get the value of currencyCodeId.
     *
     * @return integer
     */
    public function getCurrencyCodeId()
    {
        return $this->currencyCodeId;
    }

    /**
     * Set the value of nListingName.
     *
     * @param integer $nListingName
     * @return \Entity\PlanHistory
     */
    public function setNListingName($nListingName)
    {
        $this->nListingName = $nListingName;

        return $this;
    }

    /**
     * Get the value of nListingName.
     *
     * @return integer
     */
    public function getNListingName()
    {
        return $this->nListingName;
    }

    /**
     * Set the value of nAdminAccounts.
     *
     * @param integer $nAdminAccounts
     * @return \Entity\PlanHistory
     */
    public function setNAdminAccounts($nAdminAccounts)
    {
        $this->nAdminAccounts = $nAdminAccounts;

        return $this;
    }

    /**
     * Get the value of nAdminAccounts.
     *
     * @return integer
     */
    public function getNAdminAccounts()
    {
        return $this->nAdminAccounts;
    }

    /**
     * Set the value of bEmailSupport.
     *
     * @param boolean $bEmailSupport
     * @return \Entity\PlanHistory
     */
    public function setBEmailSupport($bEmailSupport)
    {
        $this->bEmailSupport = $bEmailSupport;

        return $this;
    }

    /**
     * Get the value of bEmailSupport.
     *
     * @return boolean
     */
    public function getBEmailSupport()
    {
        return $this->bEmailSupport;
    }

    /**
     * Set the value of bPhoneSupport.
     *
     * @param boolean $bPhoneSupport
     * @return \Entity\PlanHistory
     */
    public function setBPhoneSupport($bPhoneSupport)
    {
        $this->bPhoneSupport = $bPhoneSupport;

        return $this;
    }

    /**
     * Get the value of bPhoneSupport.
     *
     * @return boolean
     */
    public function getBPhoneSupport()
    {
        return $this->bPhoneSupport;
    }

    /**
     * Set the value of bMailouts.
     *
     * @param boolean $bMailouts
     * @return \Entity\PlanHistory
     */
    public function setBMailouts($bMailouts)
    {
        $this->bMailouts = $bMailouts;

        return $this;
    }

    /**
     * Get the value of bMailouts.
     *
     * @return boolean
     */
    public function getBMailouts()
    {
        return $this->bMailouts;
    }

    /**
     * Set the value of bSSLsetup.
     *
     * @param boolean $bSSLsetup
     * @return \Entity\PlanHistory
     */
    public function setBSSLsetup($bSSLsetup)
    {
        $this->bSSLsetup = $bSSLsetup;

        return $this;
    }

    /**
     * Get the value of bSSLsetup.
     *
     * @return boolean
     */
    public function getBSSLsetup()
    {
        return $this->bSSLsetup;
    }

    /**
     * Set the value of nCountry.
     *
     * @param integer $nCountry
     * @return \Entity\PlanHistory
     */
    public function setNCountry($nCountry)
    {
        $this->nCountry = $nCountry;

        return $this;
    }

    /**
     * Get the value of nCountry.
     *
     * @return integer
     */
    public function getNCountry()
    {
        return $this->nCountry;
    }

    /**
     * Set the value of tAdditionalNotes.
     *
     * @param string $tAdditionalNotes
     * @return \Entity\PlanHistory
     */
    public function setTAdditionalNotes($tAdditionalNotes)
    {
        $this->tAdditionalNotes = $tAdditionalNotes;

        return $this;
    }

    /**
     * Get the value of tAdditionalNotes.
     *
     * @return string
     */
    public function getTAdditionalNotes()
    {
        return $this->tAdditionalNotes;
    }

    /**
     * Set the value of dCreatedAt.
     *
     * @param \DateTime $dCreatedAt
     * @return \Entity\PlanHistory
     */
    public function setDCreatedAt($dCreatedAt)
    {
        $this->dCreatedAt = $dCreatedAt;

        return $this;
    }

    /**
     * Get the value of dCreatedAt.
     *
     * @return \DateTime
     */
    public function getDCreatedAt()
    {
        return $this->dCreatedAt;
    }

    /**
     * Set the value of dUpdatedAt.
     *
     * @param \DateTime $dUpdatedAt
     * @return \Entity\PlanHistory
     */
    public function setDUpdatedAt($dUpdatedAt)
    {
        $this->dUpdatedAt = $dUpdatedAt;

        return $this;
    }

    /**
     * Get the value of dUpdatedAt.
     *
     * @return \DateTime
     */
    public function getDUpdatedAt()
    {
        return $this->dUpdatedAt;
    }

    /**
     * Set University entity (many to one).
     *
     * @param \Entity\University $university
     * @return \Entity\PlanHistory
     */
    public function setUniversity(University $university = null)
    {
        $this->university = $university;

        return $this;
    }

    /**
     * Get University entity (many to one).
     *
     * @return \Entity\University
     */
    public function getUniversity()
    {
        return $this->university;
    }

    /**
     * Set CurrencyCode entity (many to one).
     *
     * @param \Entity\CurrencyCode $currencyCode
     * @return \Entity\PlanHistory
     */
    public function setCurrencyCode(CurrencyCode $currencyCode = null)
    {
        $this->currencyCode = $currencyCode;

        return $this;
    }

    /**
     * Get CurrencyCode entity (many to one).
     *
     * @return \Entity\CurrencyCode
     */
    public function getCurrencyCode()
    {
        return $this->currencyCode;
    }

    public function __sleep()
    {
        return array('id', 'universityId', 'currencyCodeId', 'nListingName', 'nAdminAccounts', 'bEmailSupport', 'bPhoneSupport', 'bMailouts', 'bSSLsetup', 'nCountry', 'tAdditionalNotes', 'dCreatedAt', 'dUpdatedAt');
    }
}
<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-05-12 15:16:43.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Entity\StudentApproval
 *
 * @ORM\Entity(repositoryClass="StudentApprovalRepository")
 * @ORM\Table(name="studentApproval", indexes={@ORM\Index(name="fk_studentApproval_university1_idx", columns={"university_id"})})
 */
class StudentApproval
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bRestrictions;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $nExpirationInMonths;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bHTTPverification;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tURL;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tUsernameLable;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tPostUsernameAs;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tPasswordLabel;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tPostPasswordAs;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tValidResponse;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $bOfferPersonalinfo;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tStudentType;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $tStudentId;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $dCreatedAt;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $dUpdatedAt;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $university_id;

    /**
     * @ORM\ManyToOne(targetEntity="University", inversedBy="studentApprovals")
     * @ORM\JoinColumn(name="university_id", referencedColumnName="id")
     */
    protected $university;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Entity\StudentApproval
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of bRestrictions.
     *
     * @param boolean $bRestrictions
     * @return \Entity\StudentApproval
     */
    public function setBRestrictions($bRestrictions)
    {
        $this->bRestrictions = $bRestrictions;

        return $this;
    }

    /**
     * Get the value of bRestrictions.
     *
     * @return boolean
     */
    public function getBRestrictions()
    {
        return $this->bRestrictions;
    }

    /**
     * Set the value of nExpirationInMonths.
     *
     * @param integer $nExpirationInMonths
     * @return \Entity\StudentApproval
     */
    public function setNExpirationInMonths($nExpirationInMonths)
    {
        $this->nExpirationInMonths = $nExpirationInMonths;

        return $this;
    }

    /**
     * Get the value of nExpirationInMonths.
     *
     * @return integer
     */
    public function getNExpirationInMonths()
    {
        return $this->nExpirationInMonths;
    }

    /**
     * Set the value of bHTTPverification.
     *
     * @param boolean $bHTTPverification
     * @return \Entity\StudentApproval
     */
    public function setBHTTPverification($bHTTPverification)
    {
        $this->bHTTPverification = $bHTTPverification;

        return $this;
    }

    /**
     * Get the value of bHTTPverification.
     *
     * @return boolean
     */
    public function getBHTTPverification()
    {
        return $this->bHTTPverification;
    }

    /**
     * Set the value of tURL.
     *
     * @param string $tURL
     * @return \Entity\StudentApproval
     */
    public function setTURL($tURL)
    {
        $this->tURL = $tURL;

        return $this;
    }

    /**
     * Get the value of tURL.
     *
     * @return string
     */
    public function getTURL()
    {
        return $this->tURL;
    }

    /**
     * Set the value of tUsernameLable.
     *
     * @param string $tUsernameLable
     * @return \Entity\StudentApproval
     */
    public function setTUsernameLable($tUsernameLable)
    {
        $this->tUsernameLable = $tUsernameLable;

        return $this;
    }

    /**
     * Get the value of tUsernameLable.
     *
     * @return string
     */
    public function getTUsernameLable()
    {
        return $this->tUsernameLable;
    }

    /**
     * Set the value of tPostUsernameAs.
     *
     * @param string $tPostUsernameAs
     * @return \Entity\StudentApproval
     */
    public function setTPostUsernameAs($tPostUsernameAs)
    {
        $this->tPostUsernameAs = $tPostUsernameAs;

        return $this;
    }

    /**
     * Get the value of tPostUsernameAs.
     *
     * @return string
     */
    public function getTPostUsernameAs()
    {
        return $this->tPostUsernameAs;
    }

    /**
     * Set the value of tPasswordLabel.
     *
     * @param string $tPasswordLabel
     * @return \Entity\StudentApproval
     */
    public function setTPasswordLabel($tPasswordLabel)
    {
        $this->tPasswordLabel = $tPasswordLabel;

        return $this;
    }

    /**
     * Get the value of tPasswordLabel.
     *
     * @return string
     */
    public function getTPasswordLabel()
    {
        return $this->tPasswordLabel;
    }

    /**
     * Set the value of tPostPasswordAs.
     *
     * @param string $tPostPasswordAs
     * @return \Entity\StudentApproval
     */
    public function setTPostPasswordAs($tPostPasswordAs)
    {
        $this->tPostPasswordAs = $tPostPasswordAs;

        return $this;
    }

    /**
     * Get the value of tPostPasswordAs.
     *
     * @return string
     */
    public function getTPostPasswordAs()
    {
        return $this->tPostPasswordAs;
    }

    /**
     * Set the value of tValidResponse.
     *
     * @param string $tValidResponse
     * @return \Entity\StudentApproval
     */
    public function setTValidResponse($tValidResponse)
    {
        $this->tValidResponse = $tValidResponse;

        return $this;
    }

    /**
     * Get the value of tValidResponse.
     *
     * @return string
     */
    public function getTValidResponse()
    {
        return $this->tValidResponse;
    }

    /**
     * Set the value of bOfferPersonalinfo.
     *
     * @param boolean $bOfferPersonalinfo
     * @return \Entity\StudentApproval
     */
    public function setBOfferPersonalinfo($bOfferPersonalinfo)
    {
        $this->bOfferPersonalinfo = $bOfferPersonalinfo;

        return $this;
    }

    /**
     * Get the value of bOfferPersonalinfo.
     *
     * @return boolean
     */
    public function getBOfferPersonalinfo()
    {
        return $this->bOfferPersonalinfo;
    }

    /**
     * Set the value of tStudentType.
     *
     * @param string $tStudentType
     * @return \Entity\StudentApproval
     */
    public function setTStudentType($tStudentType)
    {
        $this->tStudentType = $tStudentType;

        return $this;
    }

    /**
     * Get the value of tStudentType.
     *
     * @return string
     */
    public function getTStudentType()
    {
        return $this->tStudentType;
    }

    /**
     * Set the value of tStudentId.
     *
     * @param string $tStudentId
     * @return \Entity\StudentApproval
     */
    public function setTStudentId($tStudentId)
    {
        $this->tStudentId = $tStudentId;

        return $this;
    }

    /**
     * Get the value of tStudentId.
     *
     * @return string
     */
    public function getTStudentId()
    {
        return $this->tStudentId;
    }

    /**
     * Set the value of dCreatedAt.
     *
     * @param \DateTime $dCreatedAt
     * @return \Entity\StudentApproval
     */
    public function setDCreatedAt($dCreatedAt)
    {
        $this->dCreatedAt = $dCreatedAt;

        return $this;
    }

    /**
     * Get the value of dCreatedAt.
     *
     * @return \DateTime
     */
    public function getDCreatedAt()
    {
        return $this->dCreatedAt;
    }

    /**
     * Set the value of dUpdatedAt.
     *
     * @param \DateTime $dUpdatedAt
     * @return \Entity\StudentApproval
     */
    public function setDUpdatedAt($dUpdatedAt)
    {
        $this->dUpdatedAt = $dUpdatedAt;

        return $this;
    }

    /**
     * Get the value of dUpdatedAt.
     *
     * @return \DateTime
     */
    public function getDUpdatedAt()
    {
        return $this->dUpdatedAt;
    }

    /**
     * Set the value of university_id.
     *
     * @param integer $university_id
     * @return \Entity\StudentApproval
     */
    public function setUniversityId($university_id)
    {
        $this->university_id = $university_id;

        return $this;
    }

    /**
     * Get the value of university_id.
     *
     * @return integer
     */
    public function getUniversityId()
    {
        return $this->university_id;
    }

    /**
     * Set University entity (many to one).
     *
     * @param \Entity\University $university
     * @return \Entity\StudentApproval
     */
    public function setUniversity(University $university = null)
    {
        $this->university = $university;

        return $this;
    }

    /**
     * Get University entity (many to one).
     *
     * @return \Entity\University
     */
    public function getUniversity()
    {
        return $this->university;
    }

    public function __sleep()
    {
        return array('id', 'bRestrictions', 'nExpirationInMonths', 'bHTTPverification', 'tURL', 'tUsernameLable', 'tPostUsernameAs', 'tPasswordLabel', 'tPostPasswordAs', 'tValidResponse', 'bOfferPersonalinfo', 'tStudentType', 'tStudentId', 'dCreatedAt', 'dUpdatedAt', 'university_id');
    }
}